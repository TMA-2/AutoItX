<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" schema="maml" xmlns="http://msh">
  <command:command>
    <command:details>
      <command:name>Assert-AU3IsAdmin</command:name>
      <maml:description>
        <maml:para>Checks if the current process is running with administrator privileges.</maml:para>
      </maml:description>
      <command:verb>Assert</command:verb>
      <command:noun>AU3IsAdmin</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Assert-AU3IsAdmin cmdlet checks whether the current PowerShell process is running with administrator privileges. This is useful for ensuring that scripts or commands that require elevated permissions can execute properly. The cmdlet corresponds to the AutoIt function IsAdmin().</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Assert-AU3IsAdmin</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>Returns a boolean value indicating whether the current process has administrator privileges.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the AutoIt IsAdmin() function and is useful for determining if elevation is required before executing administrative tasks.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Assert-AU3IsAdmin
```</maml:para>
          <maml:para>This example checks if the current process is running with administrator privileges. Returns $true if running as admin, $false otherwise.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>AutoIt IsAdmin Function</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/IsAdmin.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Assert-AU3WinActive</command:name>
      <maml:description>
        <maml:para>Checks if a window is currently active.</maml:para>
      </maml:description>
      <command:verb>Assert</command:verb>
      <command:noun>AU3WinActive</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Assert-AU3WinActive cmdlet checks whether a specified window is currently the active window. You can identify windows by their title and optional text content, or by using a window handle. This corresponds to the AutoIt WinActive() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Assert-AU3WinActive</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Assert-AU3WinActive</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 if the window is active, 0 otherwise.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the corresponding AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Assert-AU3WinActive cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>AutoIt Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Assert-AU3WinExists</command:name>
      <maml:description>
        <maml:para>Checks if a window exists based on title, text, or handle.</maml:para>
      </maml:description>
      <command:verb>Assert</command:verb>
      <command:noun>AU3WinExists</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Assert-AU3WinExists cmdlet checks whether a window exists on the desktop. You can identify windows by their title and optional text content, or by using a window handle. This corresponds to the AutoIt WinExists() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Assert-AU3WinExists</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to check for existence. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Assert-AU3WinExists</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to check for existence. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to check for existence. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to check for existence. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The window title to check for existence.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A window handle to check for existence.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>Returns a boolean value indicating whether the specified window exists.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the AutoIt WinExists() function. Window titles can use advanced window matching modes including regular expressions and partial matches.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Assert-AU3WinExists -Title "Notepad"
```</maml:para>
          <maml:para>This example checks if a window with the title "Notepad" exists. Returns $true if the window exists, $false otherwise.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>AutoIt WinExists Function</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinExists.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Close-AU3Win</command:name>
      <maml:description>
        <maml:para>Closes a window by title, text, or handle.</maml:para>
      </maml:description>
      <command:verb>Close</command:verb>
      <command:noun>AU3Win</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Close-AU3Win cmdlet closes a window identified by its title and optional text content, or by its window handle. You can optionally force the window to close if it doesn't respond to normal close requests. This corresponds to the AutoIt WinClose() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Close-AU3Win</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Forces the operation to complete even if the window does not respond to normal requests.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Close-AU3Win</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Forces the operation to complete even if the window does not respond to normal requests.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>Forces the operation to complete even if the window does not respond to normal requests.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 if the window is not found.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the corresponding AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Close-AU3Win -Title "Notepad"
```</maml:para>
          <maml:para>This example closes a window with the title "Notepad".</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>AutoIt Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Disable-AU3Control</command:name>
      <maml:description>
        <maml:para>Disables a control in a window.</maml:para>
      </maml:description>
      <command:verb>Disable</command:verb>
      <command:noun>AU3Control</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Disable-AU3Control cmdlet disables a control within a window, making it non-interactive for the user. The control is identified by its ID, ClassNameNN, or text within the specified window. This corresponds to the AutoIt ControlDisable() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Disable-AU3Control</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Disable-AU3Control</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the corresponding AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Disable-AU3Control cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>AutoIt Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Enable-AU3Control</command:name>
      <maml:description>
        <maml:para>Enables a control in a window.</maml:para>
      </maml:description>
      <command:verb>Enable</command:verb>
      <command:noun>AU3Control</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Enable-AU3Control cmdlet enables a previously disabled control within a window, making it interactive for the user. The control is identified by its ID, ClassNameNN, or text within the specified window. This corresponds to the AutoIt ControlEnable() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Enable-AU3Control</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Enable-AU3Control</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the corresponding AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Enable-AU3Control cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>AutoIt Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3Clip</command:name>
      <maml:description>
        <maml:para>Retrieves the current contents of the Windows clipboard.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3Clip</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3Clip cmdlet retrieves the current text contents of the Windows clipboard. This is useful for automation scripts that need to capture clipboard data or verify what was copied to the clipboard. The cmdlet only retrieves text data and returns an empty string if the clipboard contains non-text data such as images or files.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3Clip</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>Returns the current clipboard contents as a string. Returns an empty string if the clipboard is empty or contains non-text data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>- This cmdlet only retrieves text data from the clipboard
- If the clipboard contains binary data (images, files, etc.), an empty string is returned
- The clipboard contents are retrieved as they exist at the time the cmdlet is called</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3Clip cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Set-AU3Clip</maml:linkText>
        <command:uri>Set-AU3Clip.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3ControlFocus</command:name>
      <maml:description>
        <maml:para>Gets the currently focused control in a window.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3ControlFocus</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3ControlFocus cmdlet retrieves the ClassNameNN of the control that currently has focus within the specified window. This corresponds to the AutoIt ControlGetFocus() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3ControlFocus</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AU3ControlFocus</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The ControlRef# of the focused control as a string.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ControlGetFocus() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3ControlFocus cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ControlGetFocus.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3ControlHandle</command:name>
      <maml:description>
        <maml:para>Retrieves the internal handle of a control.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3ControlHandle</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3ControlHandle cmdlet retrieves the internal handle (HWND) of a control. This handle can be used for advanced control manipulation and is useful for automation scripts that need to work with control handles directly. The function returns a HWND/Handle value that can be used with other Windows API functions or AutoItX cmdlets.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3ControlHandle</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AU3ControlHandle</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>Returns the handle (HWND) value as an IntPtr. Returns 0 if no window matches the criteria or if the control is not found.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>- This function returns a HWND/Handle value that can be used for advanced control manipulation
- The Title parameter can accept window titles, handles, or class names
- The Control parameter can be a control ID, ClassNameNN, or control text
- Returns 0 if the window or control cannot be found</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3ControlHandle cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-AU3ControlPos</maml:linkText>
        <command:uri>Get-AU3ControlPos.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-AU3ControlText</maml:linkText>
        <command:uri>Get-AU3ControlText.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-AU3ControlFocus</maml:linkText>
        <command:uri>Get-AU3ControlFocus.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3ControlPos</command:name>
      <maml:description>
        <maml:para>Gets the position and size of a control.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3ControlPos</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3ControlPos cmdlet retrieves the position and size information (X, Y, Width, Height) of a control within a window. This corresponds to the AutoIt ControlGetPos() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3ControlPos</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AU3ControlPos</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Drawing.Rectangle</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A Rectangle containing the position (x, y) and size (width, height) properties of the control.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ControlGetPos() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3ControlPos cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ControlGetPos.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3ControlText</command:name>
      <maml:description>
        <maml:para>Retrieves the text from a control.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3ControlText</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3ControlText cmdlet retrieves the text content from a control within a window. The control is identified by its ID, ClassNameNN, or text within the specified window. This corresponds to the AutoIt ControlGetText() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3ControlText</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AU3ControlText</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>Window title and control identifier that can be piped to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>Window handle that can be piped to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The text content of the specified control.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the corresponding AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3ControlText cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>AutoIt Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3ErrorCode</command:name>
      <maml:description>
        <maml:para>Gets the last AutoIt error code.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3ErrorCode</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3ErrorCode cmdlet retrieves the last error code from AutoIt operations. This is useful for debugging and error handling in automation scripts.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3ErrorCode</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The last error code as an integer value.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ErrorCode() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3ErrorCode cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ErrorCode.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3MouseCursor</command:name>
      <maml:description>
        <maml:para>Gets the current mouse cursor type.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3MouseCursor</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3MouseCursor cmdlet retrieves the current mouse cursor type or ID. This corresponds to the AutoIt MouseGetCursor() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3MouseCursor</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The current mouse cursor ID. Returns specific numeric values corresponding to different cursor types.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the corresponding AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3MouseCursor cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>AutoIt Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3MousePos</command:name>
      <maml:description>
        <maml:para>Gets the current mouse cursor position.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3MousePos</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3MousePos cmdlet retrieves the current position of the mouse cursor on the screen. This corresponds to the AutoIt MouseGetPos() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3MousePos</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Drawing.Point</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A Point containing the current position (x, y) of the mouse cursor.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the MouseGetPos() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3MousePos cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/MouseGetPos.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3StatusbarText</command:name>
      <maml:description>
        <maml:para>Retrieves text from a status bar.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3StatusbarText</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3StatusbarText cmdlet retrieves text from a specific part of a status bar control within a window. This corresponds to the AutoIt StatusbarGetText() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3StatusbarText</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Part</maml:name>
          <maml:description>
            <maml:para>The part number of the status bar to read text from. The first part is 1.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AU3StatusbarText</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Part</maml:name>
          <maml:description>
            <maml:para>The part number of the status bar to read text from. The first part is 1.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Part</maml:name>
        <maml:description>
          <maml:para>The part number of the status bar to read text from. The first part is 1.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The text from the status bar as a string.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the StatusBarGetText() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3StatusbarText cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/StatusBarGetText.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3WinCaretPos</command:name>
      <maml:description>
        <maml:para>Gets the position of the text caret in a window.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3WinCaretPos</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3WinCaretPos cmdlet retrieves the position of the text caret (cursor) within a window. This corresponds to the AutoIt WinGetCaretPos() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3WinCaretPos</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Drawing.Point</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A Point containing the caret coordinates.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinGetCaretPos() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3WinCaretPos cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinGetCaretPos.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3WinClassList</command:name>
      <maml:description>
        <maml:para>Gets a list of window classes for a window.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3WinClassList</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3WinClassList cmdlet retrieves a list of all control class names within a window. This corresponds to the AutoIt WinGetClassList() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3WinClassList</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AU3WinClassList</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A string containing the window class names.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinGetClassList() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3WinClassList cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinGetClassList.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3WinClientSize</command:name>
      <maml:description>
        <maml:para>Gets the client area size of a window.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3WinClientSize</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3WinClientSize cmdlet retrieves the size of the client area of a window (excluding title bar, borders, etc.). This corresponds to the AutoIt WinGetClientSize() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3WinClientSize</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AU3WinClientSize</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A Size containing the client area dimensions.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinGetClientSize() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3WinClientSize cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinGetClientSize.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3WinHandle</command:name>
      <maml:description>
        <maml:para>Gets the handle of a window.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3WinHandle</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3WinHandle cmdlet retrieves the window handle (HWND) of a window identified by title and optional text. This corresponds to the AutoIt WinGetHandle() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3WinHandle</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AsText</maml:name>
          <maml:description>
            <maml:para>Returns the window handle as text instead of an IntPtr object.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>AsText</maml:name>
        <maml:description>
          <maml:para>Returns the window handle as text instead of an IntPtr object.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The window handle as an IntPtr.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinGetHandle() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3WinHandle cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinGetHandle.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3WinPos</command:name>
      <maml:description>
        <maml:para>Gets the position and size of a window.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3WinPos</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3WinPos cmdlet retrieves the position and size of a window (X, Y, Width, Height). This corresponds to the AutoIt WinGetPos() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3WinPos</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AU3WinPos</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Drawing.Rectangle</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A Rectangle containing the position (x, y) and size (width, height) properties of the window.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinGetPos() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3WinPos cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinGetPos.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3WinProcess</command:name>
      <maml:description>
        <maml:para>Gets the process ID of a window.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3WinProcess</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3WinProcess cmdlet retrieves the process ID (PID) of the process that owns the specified window. This corresponds to the AutoIt WinGetProcess() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3WinProcess</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AU3WinProcess</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A UInt representing the process ID of the window.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinGetProcess() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3WinProcess cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinGetProcess.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3WinState</command:name>
      <maml:description>
        <maml:para>Gets the state of a window.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3WinState</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3WinState cmdlet retrieves the current state of a window (visible, minimized, maximized, etc.). This corresponds to the AutoIt WinGetState() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3WinState</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AU3WinState</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The window state as an integer flag.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinGetState() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3WinState cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinGetState.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3WinText</command:name>
      <maml:description>
        <maml:para>Gets all text from a window.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3WinText</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3WinText cmdlet retrieves all visible text from a window. This corresponds to the AutoIt WinGetText() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3WinText</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AU3WinText</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The text from the window as a string.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinGetText() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3WinText cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinGetText.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-AU3WinTitle</command:name>
      <maml:description>
        <maml:para>Gets the title of a window.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>AU3WinTitle</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Get-AU3WinTitle cmdlet retrieves the title text of a window. This corresponds to the AutoIt WinGetTitle() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AU3WinTitle</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AU3WinTitle</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The window title as a string.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinGetTitle() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Get-AU3WinTitle cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinGetTitle.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Hide-AU3Control</command:name>
      <maml:description>
        <maml:para>Hides a control in a window.</maml:para>
      </maml:description>
      <command:verb>Hide</command:verb>
      <command:noun>AU3Control</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Hide-AU3Control cmdlet hides a control within a window, making it invisible to the user. The control is identified by its ID, ClassNameNN, or text within the specified window. This corresponds to the AutoIt ControlHide() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Hide-AU3Control</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Hide-AU3Control</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ControlHide() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Hide-AU3Control cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ControlHide.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Initialize-AU3</command:name>
      <maml:description>
        <maml:para>Initializes the AutoIt COM object.</maml:para>
      </maml:description>
      <command:verb>Initialize</command:verb>
      <command:noun>AU3</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Initialize-AU3 cmdlet initializes the AutoIt COM object and prepares it for use. This should typically be called before using other AutoIt functions.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Initialize-AU3</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The result of the operation.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the Init() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Initialize-AU3 cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/Init.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3ControlClick</command:name>
      <maml:description>
        <maml:para>Clicks on a control.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3ControlClick</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3ControlClick cmdlet performs a mouse click on a specific control within a window. You can specify which mouse button to click, coordinates, and number of clicks. This corresponds to the AutoIt ControlClick() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3ControlClick</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>Button</maml:name>
          <maml:description>
            <maml:para>The mouse button to use. Valid values are "left", "right", "middle", "main", "menu", "primary", or "secondary".</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>NumClicks</maml:name>
          <maml:description>
            <maml:para>The number of times to click the mouse button. Default is 1.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>X</maml:name>
          <maml:description>
            <maml:para>The X coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6" aliases="none">
          <maml:name>Y</maml:name>
          <maml:description>
            <maml:para>The Y coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Invoke-AU3ControlClick</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>Button</maml:name>
          <maml:description>
            <maml:para>The mouse button to use. Valid values are "left", "right", "middle", "main", "menu", "primary", or "secondary".</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>NumClicks</maml:name>
          <maml:description>
            <maml:para>The number of times to click the mouse button. Default is 1.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>X</maml:name>
          <maml:description>
            <maml:para>The X coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6" aliases="none">
          <maml:name>Y</maml:name>
          <maml:description>
            <maml:para>The Y coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>Button</maml:name>
        <maml:description>
          <maml:para>The mouse button to use. Valid values are "left", "right", "middle", "main", "menu", "primary", or "secondary".</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
        <maml:name>NumClicks</maml:name>
        <maml:description>
          <maml:para>The number of times to click the mouse button. Default is 1.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
        <maml:name>X</maml:name>
        <maml:description>
          <maml:para>The X coordinate position in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6" aliases="none">
        <maml:name>Y</maml:name>
        <maml:description>
          <maml:para>The Y coordinate position in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ControlClick() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3ControlClick cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ControlClick.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3ControlCommand</command:name>
      <maml:description>
        <maml:para>Sends commands to a control.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3ControlCommand</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3ControlCommand cmdlet sends commands to a control within a window. The available commands vary depending on the control type. This corresponds to the AutoIt ControlCommand() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3ControlCommand</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>Command</maml:name>
          <maml:description>
            <maml:para>The command to send to the control. This varies depending on the control type.</maml:para>
            <maml:para>*Supported commands*:
IsVisible, IsEnabled, ShowDropDown, HideDropDown, AddString, DelString, FindString, GetCount, SetCurrentSelection, SelectString, IsChecked, Check, UnCheck, GetCurrentLine, GetCurrentCol, GetCurrentSelection, GetLineCount, GetLine, GetSelected, EditPaste, CurrentTab, TabRight, TabLeft, SendCommandID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Extra</maml:name>
          <maml:description>
            <maml:para>Additional parameter specific to the command being executed.</maml:para>
            <maml:para>Supported commands / Extra parameters:
- AddString / 'string' / Adds a string to a ListBox or ComboBox
- DelString / occurrence / Deletes a ListBox or ComboBox entry
- EditPaste / 'string' / Paste the value at an Edit caret position
- FindString / 'string' / Returns position of a ListBox or ComboBox entry
- GetLine / line / Get line number of text in an Edit
- SelectString / 'string' / Set selection in a ListBox or ComboBox
- SendCommandID / Command ID / Simulate a WM_COMMAND message. Mostly for ToolbarWindow32.
- SetCurrentSelection / occurrence / Set ListBox or ComboBox selection</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Invoke-AU3ControlCommand</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>Command</maml:name>
          <maml:description>
            <maml:para>The command to send to the control. This varies depending on the control type.</maml:para>
            <maml:para>*Supported commands*:
IsVisible, IsEnabled, ShowDropDown, HideDropDown, AddString, DelString, FindString, GetCount, SetCurrentSelection, SelectString, IsChecked, Check, UnCheck, GetCurrentLine, GetCurrentCol, GetCurrentSelection, GetLineCount, GetLine, GetSelected, EditPaste, CurrentTab, TabRight, TabLeft, SendCommandID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Extra</maml:name>
          <maml:description>
            <maml:para>Additional parameter specific to the command being executed.</maml:para>
            <maml:para>Supported commands / Extra parameters:
- AddString / 'string' / Adds a string to a ListBox or ComboBox
- DelString / occurrence / Deletes a ListBox or ComboBox entry
- EditPaste / 'string' / Paste the value at an Edit caret position
- FindString / 'string' / Returns position of a ListBox or ComboBox entry
- GetLine / line / Get line number of text in an Edit
- SelectString / 'string' / Set selection in a ListBox or ComboBox
- SendCommandID / Command ID / Simulate a WM_COMMAND message. Mostly for ToolbarWindow32.
- SetCurrentSelection / occurrence / Set ListBox or ComboBox selection</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>Command</maml:name>
        <maml:description>
          <maml:para>The command to send to the control. This varies depending on the control type.</maml:para>
          <maml:para>*Supported commands*:
IsVisible, IsEnabled, ShowDropDown, HideDropDown, AddString, DelString, FindString, GetCount, SetCurrentSelection, SelectString, IsChecked, Check, UnCheck, GetCurrentLine, GetCurrentCol, GetCurrentSelection, GetLineCount, GetLine, GetSelected, EditPaste, CurrentTab, TabRight, TabLeft, SendCommandID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
        <maml:name>Extra</maml:name>
        <maml:description>
          <maml:para>Additional parameter specific to the command being executed.</maml:para>
          <maml:para>Supported commands / Extra parameters:
- AddString / 'string' / Adds a string to a ListBox or ComboBox
- DelString / occurrence / Deletes a ListBox or ComboBox entry
- EditPaste / 'string' / Paste the value at an Edit caret position
- FindString / 'string' / Returns position of a ListBox or ComboBox entry
- GetLine / line / Get line number of text in an Edit
- SelectString / 'string' / Set selection in a ListBox or ComboBox
- SendCommandID / Command ID / Simulate a WM_COMMAND message. Mostly for ToolbarWindow32.
- SetCurrentSelection / occurrence / Set ListBox or ComboBox selection</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>Depends on</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ControlCommand() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3ControlCommand cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ControlCommand.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3ControlListView</command:name>
      <maml:description>
        <maml:para>Performs ListView operations.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3ControlListView</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3ControlListView cmdlet performs operations on ListView controls within a window. This corresponds to the AutoIt ControlListView() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3ControlListView</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>Command</maml:name>
          <maml:description>
            <maml:para>The command to send to the control. This varies depending on the control type.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Extra1</maml:name>
          <maml:description>
            <maml:para>First additional parameter specific to the command being executed.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>Extra2</maml:name>
          <maml:description>
            <maml:para>Second additional parameter specific to the command being executed.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Invoke-AU3ControlListView</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>Command</maml:name>
          <maml:description>
            <maml:para>The command to send to the control. This varies depending on the control type.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Extra1</maml:name>
          <maml:description>
            <maml:para>First additional parameter specific to the command being executed.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>Extra2</maml:name>
          <maml:description>
            <maml:para>Second additional parameter specific to the command being executed.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>Command</maml:name>
        <maml:description>
          <maml:para>The command to send to the control. This varies depending on the control type.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
        <maml:name>Extra1</maml:name>
        <maml:description>
          <maml:para>First additional parameter specific to the command being executed.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
        <maml:name>Extra2</maml:name>
        <maml:description>
          <maml:para>Second additional parameter specific to the command being executed.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The response from the ListView control command as a string.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ControlListView() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3ControlListView cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ControlListView.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3ControlTreeView</command:name>
      <maml:description>
        <maml:para>Performs TreeView operations.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3ControlTreeView</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3ControlTreeView cmdlet performs operations on TreeView controls within a window. This corresponds to the AutoIt ControlTreeView() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3ControlTreeView</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>Command</maml:name>
          <maml:description>
            <maml:para>The command to send to the control. This varies depending on the control type.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Extra1</maml:name>
          <maml:description>
            <maml:para>First additional parameter specific to the command being executed.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>Extra2</maml:name>
          <maml:description>
            <maml:para>Second additional parameter specific to the command being executed.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Invoke-AU3ControlTreeView</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>Command</maml:name>
          <maml:description>
            <maml:para>The command to send to the control. This varies depending on the control type.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Extra1</maml:name>
          <maml:description>
            <maml:para>First additional parameter specific to the command being executed.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>Extra2</maml:name>
          <maml:description>
            <maml:para>Second additional parameter specific to the command being executed.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>Command</maml:name>
        <maml:description>
          <maml:para>The command to send to the control. This varies depending on the control type.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
        <maml:name>Extra1</maml:name>
        <maml:description>
          <maml:para>First additional parameter specific to the command being executed.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
        <maml:name>Extra2</maml:name>
        <maml:description>
          <maml:para>Second additional parameter specific to the command being executed.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>Return depends on the command. In case of an error (such as an invalid command or window/control could not be found) then Get-AU3ErrorCode will return 1.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the corresponding AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3ControlTreeView cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>ControlTreeView</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ControlTreeView.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3MouseClick</command:name>
      <maml:description>
        <maml:para>Performs a mouse click.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3MouseClick</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3MouseClick cmdlet performs a mouse click at the specified coordinates or current mouse position. You can specify which mouse button to click, the number of clicks, and the speed of the mouse movement. This corresponds to the AutoIt MouseClick() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3MouseClick</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Button</maml:name>
          <maml:description>
            <maml:para>The mouse button to use. Valid values are "left", "right", "middle", "main", "menu", "primary", or "secondary".</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>NumClicks</maml:name>
          <maml:description>
            <maml:para>The number of times to click the mouse button. Default is 1.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Speed</maml:name>
          <maml:description>
            <maml:para>The speed of the mouse movement. Range is 1 (fastest) to 100 (slowest).</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>X</maml:name>
          <maml:description>
            <maml:para>The X coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Y</maml:name>
          <maml:description>
            <maml:para>The Y coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Button</maml:name>
        <maml:description>
          <maml:para>The mouse button to use. Valid values are "left", "right", "middle", "main", "menu", "primary", or "secondary".</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>NumClicks</maml:name>
        <maml:description>
          <maml:para>The number of times to click the mouse button. Default is 1.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
        <maml:name>Speed</maml:name>
        <maml:description>
          <maml:para>The speed of the mouse movement. Range is 1 (fastest) to 100 (slowest).</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>X</maml:name>
        <maml:description>
          <maml:para>The X coordinate position in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Y</maml:name>
        <maml:description>
          <maml:para>The Y coordinate position in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the MouseClick() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3MouseClick cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/MouseClick.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3MouseClickDrag</command:name>
      <maml:description>
        <maml:para>Performs a mouse click and drag operation.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3MouseClickDrag</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3MouseClickDrag cmdlet performs a mouse click and drag operation from one position to another. This corresponds to the AutoIt MouseClickDrag() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3MouseClickDrag</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Button</maml:name>
          <maml:description>
            <maml:para>The mouse button to use. Valid values are "left", "right", "middle", "main", "menu", "primary", or "secondary".</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>Speed</maml:name>
          <maml:description>
            <maml:para>The speed of the mouse movement. Range is 1 (fastest) to 100 (slowest).</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>X1</maml:name>
          <maml:description>
            <maml:para>The starting X coordinate for the drag operation.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>X2</maml:name>
          <maml:description>
            <maml:para>The ending X coordinate for the drag operation.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Y1</maml:name>
          <maml:description>
            <maml:para>The starting Y coordinate for the drag operation.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Y2</maml:name>
          <maml:description>
            <maml:para>The ending Y coordinate for the drag operation.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Button</maml:name>
        <maml:description>
          <maml:para>The mouse button to use. Valid values are "left", "right", "middle", "main", "menu", "primary", or "secondary".</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
        <maml:name>Speed</maml:name>
        <maml:description>
          <maml:para>The speed of the mouse movement. Range is 1 (fastest) to 100 (slowest).</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>X1</maml:name>
        <maml:description>
          <maml:para>The starting X coordinate for the drag operation.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>X2</maml:name>
        <maml:description>
          <maml:para>The ending X coordinate for the drag operation.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Y1</maml:name>
        <maml:description>
          <maml:para>The starting Y coordinate for the drag operation.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
        <maml:name>Y2</maml:name>
        <maml:description>
          <maml:para>The ending Y coordinate for the drag operation.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the MouseClickDrag() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3MouseClickDrag cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/MouseClickDrag.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3MouseDown</command:name>
      <maml:description>
        <maml:para>Presses a mouse button down.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3MouseDown</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3MouseDown cmdlet presses and holds a mouse button down. This corresponds to the AutoIt MouseDown() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3MouseDown</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Button</maml:name>
          <maml:description>
            <maml:para>The mouse button to use. Valid values are "left", "right", "middle", "main", "menu", "primary", or "secondary".</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Button</maml:name>
        <maml:description>
          <maml:para>The mouse button to use. Valid values are "left", "right", "middle", "main", "menu", "primary", or "secondary".</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The result of the operation.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the MouseDown() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3MouseDown cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/MouseDown.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3MouseUp</command:name>
      <maml:description>
        <maml:para>Releases a mouse button.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3MouseUp</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3MouseUp cmdlet releases a previously pressed mouse button. This corresponds to the AutoIt MouseUp() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3MouseUp</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Button</maml:name>
          <maml:description>
            <maml:para>The mouse button to use. Valid values are "left", "right", "middle", "main", "menu", "primary", or "secondary".</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Button</maml:name>
        <maml:description>
          <maml:para>The mouse button to use. Valid values are "left", "right", "middle", "main", "menu", "primary", or "secondary".</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The result of the operation.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the MouseUp() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3MouseUp cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/MouseUp.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3MouseWheel</command:name>
      <maml:description>
        <maml:para>Scrolls the mouse wheel.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3MouseWheel</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3MouseWheel cmdlet scrolls the mouse wheel up or down. This corresponds to the AutoIt MouseWheel() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3MouseWheel</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Direction</maml:name>
          <maml:description>
            <maml:para>The direction to scroll the mouse wheel. Use "up" or "down".</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>NumClicks</maml:name>
          <maml:description>
            <maml:para>The number of times to click the mouse button. Default is 1.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Direction</maml:name>
        <maml:description>
          <maml:para>The direction to scroll the mouse wheel. Use "up" or "down".</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>NumClicks</maml:name>
        <maml:description>
          <maml:para>The number of times to click the mouse button. Default is 1.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The result of the operation.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the MouseWheel() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3MouseWheel cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/MouseWheel.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3Run</command:name>
      <maml:description>
        <maml:para>Runs an external program.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3Run</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3Run cmdlet runs an external program or command. This corresponds to the AutoIt Run() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3Run</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Dir</maml:name>
          <maml:description>
            <maml:para>The working directory for the program. If not specified, uses the current directory.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Program</maml:name>
          <maml:description>
            <maml:para>The program or command to execute.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>ShowFlag</maml:name>
          <maml:description>
            <maml:para>Controls how the window is displayed when the program starts.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Dir</maml:name>
        <maml:description>
          <maml:para>The working directory for the program. If not specified, uses the current directory.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Program</maml:name>
        <maml:description>
          <maml:para>The program or command to execute.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>ShowFlag</maml:name>
        <maml:description>
          <maml:para>Controls how the window is displayed when the program starts.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The process ID (PID) of the launched program, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the Run() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3Run cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/Run.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3RunAs</command:name>
      <maml:description>
        <maml:para>Runs an external program with specific credentials.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3RunAs</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3RunAs cmdlet runs an external program with specified user credentials. This corresponds to the AutoIt RunAs() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3RunAs</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>Dir</maml:name>
          <maml:description>
            <maml:para>The working directory for the program. If not specified, uses the current directory.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>The domain for the user account. Use "." for local computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>LogonFlag</maml:name>
          <maml:description>
            <maml:para>Logon flag that controls how the credentials are used.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Password</maml:name>
          <maml:description>
            <maml:para>The password for the user account.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Program</maml:name>
          <maml:description>
            <maml:para>The program or command to execute.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6" aliases="none">
          <maml:name>ShowFlag</maml:name>
          <maml:description>
            <maml:para>Controls how the window is displayed when the program starts.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>The username to run the program as.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
        <maml:name>Dir</maml:name>
        <maml:description>
          <maml:para>The working directory for the program. If not specified, uses the current directory.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>The domain for the user account. Use "." for local computer.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>LogonFlag</maml:name>
        <maml:description>
          <maml:para>Logon flag that controls how the credentials are used.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Password</maml:name>
        <maml:description>
          <maml:para>The password for the user account.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
        <maml:name>Program</maml:name>
        <maml:description>
          <maml:para>The program or command to execute.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6" aliases="none">
        <maml:name>ShowFlag</maml:name>
        <maml:description>
          <maml:para>Controls how the window is displayed when the program starts.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>The username to run the program as.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The process ID (PID) of the launched program, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the RunAs() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3RunAs cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/RunAs.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3RunAsWait</command:name>
      <maml:description>
        <maml:para>Runs an external program with credentials and waits for completion.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3RunAsWait</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3RunAsWait cmdlet runs an external program with specified user credentials and waits for it to complete. This corresponds to the AutoIt RunAsWait() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3RunAsWait</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>Dir</maml:name>
          <maml:description>
            <maml:para>The working directory for the program. If not specified, uses the current directory.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>The domain for the user account. Use "." for local computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>LogonFlag</maml:name>
          <maml:description>
            <maml:para>Logon flag that controls how the credentials are used.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Password</maml:name>
          <maml:description>
            <maml:para>The password for the user account.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Program</maml:name>
          <maml:description>
            <maml:para>The program or command to execute.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6" aliases="none">
          <maml:name>ShowFlag</maml:name>
          <maml:description>
            <maml:para>Controls how the window is displayed when the program starts.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>The username to run the program as.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
        <maml:name>Dir</maml:name>
        <maml:description>
          <maml:para>The working directory for the program. If not specified, uses the current directory.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>The domain for the user account. Use "." for local computer.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>LogonFlag</maml:name>
        <maml:description>
          <maml:para>Logon flag that controls how the credentials are used.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Password</maml:name>
        <maml:description>
          <maml:para>The password for the user account.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
        <maml:name>Program</maml:name>
        <maml:description>
          <maml:para>The program or command to execute.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6" aliases="none">
        <maml:name>ShowFlag</maml:name>
        <maml:description>
          <maml:para>Controls how the window is displayed when the program starts.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>The username to run the program as.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The exit code of the program that was run.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the RunAsWait() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3RunAsWait cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/RunAsWait.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3RunWait</command:name>
      <maml:description>
        <maml:para>Runs an external program and waits for it to complete.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3RunWait</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3RunWait cmdlet runs an external program and waits for it to complete before continuing. This corresponds to the AutoIt RunWait() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3RunWait</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Dir</maml:name>
          <maml:description>
            <maml:para>The working directory for the program. If not specified, uses the current directory.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Program</maml:name>
          <maml:description>
            <maml:para>The program or command to execute.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>ShowFlag</maml:name>
          <maml:description>
            <maml:para>Controls how the window is displayed when the program starts.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Dir</maml:name>
        <maml:description>
          <maml:para>The working directory for the program. If not specified, uses the current directory.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Program</maml:name>
        <maml:description>
          <maml:para>The program or command to execute.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>ShowFlag</maml:name>
        <maml:description>
          <maml:para>Controls how the window is displayed when the program starts.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The exit code of the program that was run.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the RunWait() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3RunWait cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/RunWait.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Invoke-AU3Shutdown</command:name>
      <maml:description>
        <maml:para>Initiates a system shutdown, restart, or logoff.</maml:para>
      </maml:description>
      <command:verb>Invoke</command:verb>
      <command:noun>AU3Shutdown</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Invoke-AU3Shutdown cmdlet initiates a system shutdown, restart, or logoff operation. This corresponds to the AutoIt Shutdown() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AU3Shutdown</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Flag</maml:name>
          <maml:description>
            <maml:para>A flag value that controls the operation behavior.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Flag</maml:name>
        <maml:description>
          <maml:para>A flag value that controls the operation behavior.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the Shutdown() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Invoke-AU3Shutdown cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/Shutdown.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Move-AU3Control</command:name>
      <maml:description>
        <maml:para>Moves and/or resizes a control.</maml:para>
      </maml:description>
      <command:verb>Move</command:verb>
      <command:noun>AU3Control</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Move-AU3Control cmdlet moves and/or resizes a control within a window. This corresponds to the AutoIt ControlMove() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Move-AU3Control</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6" aliases="none">
          <maml:name>Height</maml:name>
          <maml:description>
            <maml:para>The new height of the window or control in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>Width</maml:name>
          <maml:description>
            <maml:para>The new width of the window or control in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>X</maml:name>
          <maml:description>
            <maml:para>The X coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Y</maml:name>
          <maml:description>
            <maml:para>The Y coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Move-AU3Control</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6" aliases="none">
          <maml:name>Height</maml:name>
          <maml:description>
            <maml:para>The new height of the window or control in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>Width</maml:name>
          <maml:description>
            <maml:para>The new width of the window or control in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>X</maml:name>
          <maml:description>
            <maml:para>The X coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Y</maml:name>
          <maml:description>
            <maml:para>The Y coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6" aliases="none">
        <maml:name>Height</maml:name>
        <maml:description>
          <maml:para>The new height of the window or control in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
        <maml:name>Width</maml:name>
        <maml:description>
          <maml:para>The new width of the window or control in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>X</maml:name>
        <maml:description>
          <maml:para>The X coordinate position in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
        <maml:name>Y</maml:name>
        <maml:description>
          <maml:para>The Y coordinate position in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ControlMove() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Move-AU3Control cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ControlMove.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Move-AU3Mouse</command:name>
      <maml:description>
        <maml:para>Moves the mouse cursor to a specific position.</maml:para>
      </maml:description>
      <command:verb>Move</command:verb>
      <command:noun>AU3Mouse</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Move-AU3Mouse cmdlet moves the mouse cursor to a specified position on the screen. This corresponds to the AutoIt MouseMove() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Move-AU3Mouse</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Speed</maml:name>
          <maml:description>
            <maml:para>The speed of the mouse movement. Range is 1 (fastest) to 100 (slowest).</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>X</maml:name>
          <maml:description>
            <maml:para>The X coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Y</maml:name>
          <maml:description>
            <maml:para>The Y coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Speed</maml:name>
        <maml:description>
          <maml:para>The speed of the mouse movement. Range is 1 (fastest) to 100 (slowest).</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>X</maml:name>
        <maml:description>
          <maml:para>The X coordinate position in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Y</maml:name>
        <maml:description>
          <maml:para>The Y coordinate position in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the MouseMove() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Move-AU3Mouse cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/MouseMove.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Move-AU3Win</command:name>
      <maml:description>
        <maml:para>Moves and/or resizes a window.</maml:para>
      </maml:description>
      <command:verb>Move</command:verb>
      <command:noun>AU3Win</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Move-AU3Win cmdlet moves and/or resizes a window to a specified position and size. This corresponds to the AutoIt WinMove() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Move-AU3Win</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>Height</maml:name>
          <maml:description>
            <maml:para>The new height of the window or control in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Width</maml:name>
          <maml:description>
            <maml:para>The new width of the window or control in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>X</maml:name>
          <maml:description>
            <maml:para>The X coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>Y</maml:name>
          <maml:description>
            <maml:para>The Y coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Move-AU3Win</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
          <maml:name>Height</maml:name>
          <maml:description>
            <maml:para>The new height of the window or control in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Width</maml:name>
          <maml:description>
            <maml:para>The new width of the window or control in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>X</maml:name>
          <maml:description>
            <maml:para>The X coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>Y</maml:name>
          <maml:description>
            <maml:para>The Y coordinate position in pixels.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="none">
        <maml:name>Height</maml:name>
        <maml:description>
          <maml:para>The new height of the window or control in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
        <maml:name>Width</maml:name>
        <maml:description>
          <maml:para>The new width of the window or control in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>X</maml:name>
        <maml:description>
          <maml:para>The X coordinate position in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>Y</maml:name>
        <maml:description>
          <maml:para>The Y coordinate position in pixels.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinMove() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Move-AU3Win cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinMove.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Send-AU3ControlKey</command:name>
      <maml:description>
        <maml:para>Sends keystrokes to a control.</maml:para>
      </maml:description>
      <command:verb>Send</command:verb>
      <command:noun>AU3ControlKey</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Send-AU3ControlKey cmdlet sends keystrokes to a specific control within a window. This corresponds to the AutoIt ControlSend() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Send-AU3ControlKey</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>Key</maml:name>
          <maml:description>
            <maml:para>The key or key combination to send. Use AutoIt key notation for special keys.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Mode</maml:name>
          <maml:description>
            <maml:para>The mode for sending keys. 0 = default, 1 = raw mode.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Send-AU3ControlKey</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>Key</maml:name>
          <maml:description>
            <maml:para>The key or key combination to send. Use AutoIt key notation for special keys.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
          <maml:name>Mode</maml:name>
          <maml:description>
            <maml:para>The mode for sending keys. 0 = default, 1 = raw mode.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>Key</maml:name>
        <maml:description>
          <maml:para>The key or key combination to send. Use AutoIt key notation for special keys.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="none">
        <maml:name>Mode</maml:name>
        <maml:description>
          <maml:para>The mode for sending keys. 0 = default, 1 = raw mode.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ControlSend() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Send-AU3ControlKey cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ControlSend.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Send-AU3Key</command:name>
      <maml:description>
        <maml:para>Sends keystrokes to the active window.</maml:para>
      </maml:description>
      <command:verb>Send</command:verb>
      <command:noun>AU3Key</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Send-AU3Key cmdlet sends keystrokes to the currently active window. This corresponds to the AutoIt Send() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Send-AU3Key</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Key</maml:name>
          <maml:description>
            <maml:para>The key or key combination to send. Use AutoIt key notation for special keys.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Mode</maml:name>
          <maml:description>
            <maml:para>The mode for sending keys. 0 = default, 1 = raw mode.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Key</maml:name>
        <maml:description>
          <maml:para>The key or key combination to send. Use AutoIt key notation for special keys.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Mode</maml:name>
        <maml:description>
          <maml:para>The mode for sending keys. 0 = default, 1 = raw mode.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>None.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the Send() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Send-AU3Key cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/Send.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Set-AU3Clip</command:name>
      <maml:description>
        <maml:para>Sets the contents of the Windows clipboard.</maml:para>
      </maml:description>
      <command:verb>Set</command:verb>
      <command:noun>AU3Clip</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Set-AU3Clip cmdlet sets the contents of the Windows clipboard to the specified text. This corresponds to the AutoIt ClipPut() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-AU3Clip</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>Success: Returns 1.
Failure: Returns 0.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ClipPut() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Set-AU3Clip cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ClipPut.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Set-AU3ControlFocus</command:name>
      <maml:description>
        <maml:para>Sets focus to a control in a window.</maml:para>
      </maml:description>
      <command:verb>Set</command:verb>
      <command:noun>AU3ControlFocus</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Set-AU3ControlFocus cmdlet sets focus to a specific control within a window. The control can be identified by its ID, ClassNameNN, or text within the specified window. This corresponds to the AutoIt ControlFocus() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-AU3ControlFocus</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-AU3ControlFocus</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ControlFocus() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Set-AU3ControlFocus cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ControlFocus.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Set-AU3ControlText</command:name>
      <maml:description>
        <maml:para>Sets the text of a control.</maml:para>
      </maml:description>
      <command:verb>Set</command:verb>
      <command:noun>AU3ControlText</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Set-AU3ControlText cmdlet sets the text content of a control within a window. This corresponds to the AutoIt ControlSetText() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-AU3ControlText</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>NewText</maml:name>
          <maml:description>
            <maml:para>The new text to set for the control.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-AU3ControlText</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>NewText</maml:name>
          <maml:description>
            <maml:para>The new text to set for the control.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>NewText</maml:name>
        <maml:description>
          <maml:para>The new text to set for the control.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ControlSetText() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Set-AU3ControlText cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ControlSetText.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Set-AU3Option</command:name>
      <maml:description>
        <maml:para>Sets various AutoIt configuration options.</maml:para>
      </maml:description>
      <command:verb>Set</command:verb>
      <command:noun>AU3Option</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Set-AU3Option cmdlet sets various AutoIt configuration options that control automation behavior. This corresponds to the AutoIt AutoItSetOption() / Opt() functions. Refer to the table for accepted options and values:</maml:para>
      <maml:para>| Option               | Default | Values                                                                      | | -------------------- | ------: | --------------------------------------------------------------------------- | | CaretCoordMode       |       1 | 1=absolute, 0=relative, 2=client                                            | | ExpandEnvStrings     |       0 | 0=don't expand, 1=do expand                                                 | | ExpandVarStrings     |       0 | 0=don't expand, 1=do expand                                                 | | GUICloseOnESC        |       1 | 1=ESC  closes, 0=ESC won't close                                            | | GUICoordMode         |       1 | 1=absolute, 0=relative, 2=cell                                              | | GUIDataSeparatorChar |    "\|" | "\|" is the default                                                         | | GUIOnEventMode       |       0 | 0=disabled, 1=OnEvent mode enabled                                          | | GUIResizeMode        |       0 | 0=no resizing, &lt;1024 special resizing                                       | | GUIEventOptions      |       0 | 0=default, 1=just notification, 2=GUICtrlRead tab index                     | | MouseClickDelay      |      10 | 10 milliseconds                                                             | | MouseClickDownDelay  |      10 | 10 milliseconds                                                             | | MouseClickDragDelay  |     250 | 250 milliseconds                                                            | | MouseCoordMode       |       1 | 1=absolute, 0=relative, 2=client                                            | | MustDeclareVars      |       0 | 0=no, 1=require pre-declaration                                             | | PixelCoordMode       |       1 | 1=absolute, 0=relative, 2=client                                            | | SendAttachMode       |       0 | 0=don't attach, 1=do attach                                                 | | SendCapslockMode     |       1 | 1=store and restore, 0=don't                                                | | SendKeyDelay         |       5 | 5 milliseconds                                                              | | SendKeyDownDelay     |       1 | 1 millisecond                                                               | | TCPTimeout           |     100 | 100 milliseconds                                                            | | TrayAutoPause        |       1 | 0=no pause, 1=Pause                                                         | | TrayIconDebug        |       0 | 0=no info, 1=debug line info                                                | | TrayIconHide         |       0 | 0=show, 1=hide tray icon                                                    | | TrayMenuMode         |       0 | 0=append, 1=no default menu, 2=no automatic check, 4=menuitemID  not return | | TrayOnEventMode      |       0 | 0=disable, 1=enable                                                         | | WinDetectHiddenText  |       0 | 0=don't detect, 1=do detect                                                 | | WinSearchChildren    |       1 | 0=no, 1=search children also                                                | | WinTextMatchMode     |       1 | 1=complete, 2=quick                                                         | | WinTitleMatchMode    |       1 | 1=start, 2=subStr, 3=exact, 4=advanced, -1 to -4=Nocase                     | | WinWaitDelay         |     250 | 250 milliseconds                                                            |</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-AU3Option</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Option</maml:name>
          <maml:description>
            <maml:para>The AutoIt option name to set.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to set for the specified option.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Option</maml:name>
        <maml:description>
          <maml:para>The AutoIt option name to set.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>The value to set for the specified option.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The value of the previous setting for the option.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>The list of parameter descriptions is as follows:
| Option | Description |
| ---- | ---- |
| CaretCoordMode | Sets the way coords are used in the caret functions, either absolute coords or coords relative to the current active window. |
| ExpandEnvStrings | Changes how literal strings and % symbols are interpreted. By default strings are treated literally, this option allows you to use %environment% variables inside strings, e.g., "The temp directory is: %temp%". |
| ExpandVarStrings | Changes how literal strings and variable/macro ($ and @) symbols are interpreted. By default strings are treated literally, this option allows you to use variables and macros inside strings, e.g., "The value of var1 is $var1$". |
| GUICloseOnESC | When ESC is pressed on a GUI the $GUI_EVENT_CLOSE message is sent. This option toggles this behavior on and off. |
| GUICoordMode | Alters the position of a control defined by GUICtrlSetPos(). |
| GUIDataSeparatorChar | Define the character which delimits subitems in GUICtrlSetData(). |
| GUIOnEventMode | Enable/disable OnEvent functions notifications. |
| GUIResizeMode | Change default resizing for a control. |
| GUIEventOptions | Change special event behavior or GUI function return values. |
| MouseClickDelay | Alters the length of the brief pause in between mouse clicks. |
| MouseClickDownDelay | Alters the length a click is held down before release. |
| MouseClickDragDelay | Alters the length of the brief pause at the start and end of a mouse drag operation. |
| MouseCoordMode | Sets the way coords are used in the mouse functions, either absolute coords or coords relative to the current active window: |
| MustDeclareVars | If this option is used then all variables must be pre-declared with Local, Global or in some cases Dim before they can be used - removes the chance for misspelled variables causing bugs. |
| PixelCoordMode | Sets the way coords are used in the pixel functions, either absolute coords or coords relative to the window defined by hwnd (default active window). |
| SendAttachMode | Specifies if AutoIt attaches input threads when using Send() function. When not attaching (default mode=0) detecting the state of capslock/scrolllock and numlock can be unreliable under NT4. However, when you specify attach mode=1 the Send("{... down/up}") syntax will not work and there may be problems with sending keys to "hung" windows. ControlSend() ALWAYS attaches and is not affected by this mode. |
| SendCapslockMode | Specifies if AutoIt should store the state of capslock before a Send() function and restore it afterwards. |
| SendKeyDelay | Alters the length of the brief pause in between sent keystrokes. A value of 0 removes the delay completely. |
| SendKeyDownDelay | Alters the length of time a key is held down before being released during a keystroke. For applications that take a while to register keypresses you may need to raise this value from the default. A value of 0 removes the delay completely. |
| SetExitCode | Autoit exitcodes return when a Fatal error occurs. |
| TCPTimeout | Defines the time before TCP functions stop if no communication. |
| TrayAutoPause | Script pauses when click on tray icon. |
| TrayIconDebug | If enabled shows the current script line in the tray icon tip to help debugging. |
| TrayIconHide | Hides the AutoIt tray icon. Note: The icon will still initially appear for ~750 milliseconds. |
| TrayMenuMode | Extend the behaviour of the script tray icon/menu. This can be done with a combination (adding) of the following values. |
| TrayOnEventMode | Enable/disable OnEvent functions notifications for the tray. |
| WinDetectHiddenText | Specifies if hidden window text can be "seen" by the window matching functions. |
| WinSearchChildren | Allows the window search routines to search child windows as well as top-level windows. |
| WinTextMatchMode | Alters the method that is used to match window text during search operations. |
| WinTitleMatchMode | Alters the method that is used to match window titles during search operations. |
| WinWaitDelay | Alters how long a script should briefly pause after a successful window-related operation. |</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>Set-AU3Option -Option 'WinTitleMatchMode' -Value 3</maml:para>
          <maml:para>This sets the window title match mode to Exact.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/AutoItSetOption.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Set-AU3WinOnTop</command:name>
      <maml:description>
        <maml:para>Sets a window to be always on top.</maml:para>
      </maml:description>
      <command:verb>Set</command:verb>
      <command:noun>AU3WinOnTop</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Set-AU3WinOnTop cmdlet sets a window to be always on top of other windows. This corresponds to the AutoIt WinSetOnTop() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-AU3WinOnTop</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Flag</maml:name>
          <maml:description>
            <maml:para>A flag value that controls the operation behavior.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-AU3WinOnTop</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Flag</maml:name>
          <maml:description>
            <maml:para>A flag value that controls the operation behavior.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Flag</maml:name>
        <maml:description>
          <maml:para>A flag value that controls the operation behavior.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinSetOnTop() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Set-AU3WinOnTop cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinSetOnTop.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Set-AU3WinState</command:name>
      <maml:description>
        <maml:para>Changes the state of a window.</maml:para>
      </maml:description>
      <command:verb>Set</command:verb>
      <command:noun>AU3WinState</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Set-AU3WinState cmdlet changes the state of a window (show, hide, minimize, maximize, etc.). This corresponds to the AutoIt WinSetState() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-AU3WinState</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Flags</maml:name>
          <maml:description>
            <maml:para>Flags that control the window state or operation behavior.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-AU3WinState</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Flags</maml:name>
          <maml:description>
            <maml:para>Flags that control the window state or operation behavior.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Flags</maml:name>
        <maml:description>
          <maml:para>Flags that control the window state or operation behavior.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinSetState() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Set-AU3WinState cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinSetState.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Set-AU3WinTitle</command:name>
      <maml:description>
        <maml:para>Changes the title of a window.</maml:para>
      </maml:description>
      <command:verb>Set</command:verb>
      <command:noun>AU3WinTitle</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Set-AU3WinTitle cmdlet changes the title of a window. This corresponds to the AutoIt WinSetTitle() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-AU3WinTitle</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>NewTitle</maml:name>
          <maml:description>
            <maml:para>The new title to set for the window.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-AU3WinTitle</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>NewTitle</maml:name>
          <maml:description>
            <maml:para>The new title to set for the window.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>NewTitle</maml:name>
        <maml:description>
          <maml:para>The new title to set for the window.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinSetTitle() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Set-AU3WinTitle cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinSetTitle.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Set-AU3WinTrans</command:name>
      <maml:description>
        <maml:para>Sets the transparency of a window.</maml:para>
      </maml:description>
      <command:verb>Set</command:verb>
      <command:noun>AU3WinTrans</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Set-AU3WinTrans cmdlet sets the transparency level of a window. This corresponds to the AutoIt WinSetTrans() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-AU3WinTrans</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Flags</maml:name>
          <maml:description>
            <maml:para>Flags that control the window state or operation behavior.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-AU3WinTrans</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Flags</maml:name>
          <maml:description>
            <maml:para>Flags that control the window state or operation behavior.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Flags</maml:name>
        <maml:description>
          <maml:para>Flags that control the window state or operation behavior.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinSetTrans() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Set-AU3WinTrans cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinSetTrans.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Show-AU3Control</command:name>
      <maml:description>
        <maml:para>Shows a control in a window.</maml:para>
      </maml:description>
      <command:verb>Show</command:verb>
      <command:noun>AU3Control</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Show-AU3Control cmdlet makes a previously hidden control visible within a window. This corresponds to the AutoIt ControlShow() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Show-AU3Control</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Control</maml:name>
          <maml:description>
            <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Show-AU3Control</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>ControlHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Control</maml:name>
        <maml:description>
          <maml:para>The control to interact with. This can be a control ID, control ClassNameNN, or control text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>ControlHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the control to interact with. Use this parameter set when you already have a control handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the ControlShow() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Show-AU3Control cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/ControlShow.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Show-AU3WinActivate</command:name>
      <maml:description>
        <maml:para>Activates and brings a window to the foreground.</maml:para>
      </maml:description>
      <command:verb>Show</command:verb>
      <command:noun>AU3WinActivate</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Show-AU3WinActivate cmdlet activates a window and brings it to the foreground. This corresponds to the AutoIt WinActivate() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Show-AU3WinActivate</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Show-AU3WinActivate</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 on success, 0 on failure.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinActivate() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Show-AU3WinActivate cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinActivate.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Show-AU3WinMinimizeAll</command:name>
      <maml:description>
        <maml:para>Minimizes all windows on the desktop.</maml:para>
      </maml:description>
      <command:verb>Show</command:verb>
      <command:noun>AU3WinMinimizeAll</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Show-AU3WinMinimizeAll cmdlet minimizes all windows on the desktop. This corresponds to the AutoIt WinMinimizeAll() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Show-AU3WinMinimizeAll</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The result of the operation.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinMinimizeAll() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Show-AU3WinMinimizeAll cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinMinimizeAll.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Show-AU3WinMinimizeAllUndo</command:name>
      <maml:description>
        <maml:para>Restores all previously minimized windows.</maml:para>
      </maml:description>
      <command:verb>Show</command:verb>
      <command:noun>AU3WinMinimizeAllUndo</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Show-AU3WinMinimizeAllUndo cmdlet restores all previously minimized windows. This corresponds to the AutoIt WinMinimizeAllUndo() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Show-AU3WinMinimizeAllUndo</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The result of the operation.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinMinimizeAllUndo() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Show-AU3WinMinimizeAllUndo cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinMinimizeAllUndo.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Wait-AU3Win</command:name>
      <maml:description>
        <maml:para>Waits for a window to exist.</maml:para>
      </maml:description>
      <command:verb>Wait</command:verb>
      <command:noun>AU3Win</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Wait-AU3Win cmdlet waits for a window to exist before continuing script execution. This corresponds to the AutoIt WinWait() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Wait-AU3Win</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>The timeout value in milliseconds.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Wait-AU3Win</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>The timeout value in milliseconds.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>The timeout value in milliseconds.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 if the window appears, 0 on timeout.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinWait() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Wait-AU3Win cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinWait.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Wait-AU3WinActive</command:name>
      <maml:description>
        <maml:para>Waits for a window to become active.</maml:para>
      </maml:description>
      <command:verb>Wait</command:verb>
      <command:noun>AU3WinActive</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Wait-AU3WinActive cmdlet waits for a window to become active before continuing. This corresponds to the AutoIt WinWaitActive() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Wait-AU3WinActive</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>The timeout value in milliseconds.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Wait-AU3WinActive</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>The timeout value in milliseconds.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>The timeout value in milliseconds.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 if the window becomes active, 0 on timeout.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinWaitActive() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Wait-AU3WinActive cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinWaitActive.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Wait-AU3WinClose</command:name>
      <maml:description>
        <maml:para>Waits for a window to close.</maml:para>
      </maml:description>
      <command:verb>Wait</command:verb>
      <command:noun>AU3WinClose</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Wait-AU3WinClose cmdlet waits for a window to close before continuing. This corresponds to the AutoIt WinWaitClose() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Wait-AU3WinClose</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>The timeout value in milliseconds.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Wait-AU3WinClose</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>The timeout value in milliseconds.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>The timeout value in milliseconds.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 if the window closes, 0 on timeout.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinWaitClose() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Wait-AU3WinClose cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinWaitClose.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Wait-AU3WinNotActive</command:name>
      <maml:description>
        <maml:para>Waits for a window to become inactive.</maml:para>
      </maml:description>
      <command:verb>Wait</command:verb>
      <command:noun>AU3WinNotActive</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The Wait-AU3WinNotActive cmdlet waits for a window to become inactive before continuing. This corresponds to the AutoIt WinWaitNotActive() function.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Wait-AU3WinNotActive</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>The timeout value in milliseconds.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Wait-AU3WinNotActive</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>The timeout value in milliseconds.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>WinHandle</maml:name>
          <maml:description>
            <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Optional text to help identify the window. This is the visible text content within the window.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>The timeout value in milliseconds.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>The title of the window to access. This can be a window title, window handle, or window class name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>WinHandle</maml:name>
        <maml:description>
          <maml:para>The handle of the window to access. Use this parameter set when you already have a window handle.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.IntPtr</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>The title or text used to identify the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Int32</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>An integer value used as a parameter for the operation.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.IntPtr</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>A handle to the target window or control.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Object</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>1 if the window becomes inactive, 0 on timeout.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This cmdlet is based on the WinWaitNotActive() AutoIt function and provides Windows automation capabilities.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1 ---------</maml:title>
        <maml:introduction>
          <maml:para>This example demonstrates basic usage of the Wait-AU3WinNotActive cmdlet.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Function Documentation</maml:linkText>
        <command:uri>https://www.autoitscript.com/autoit3/docs/functions/WinWaitNotActive.htm</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>